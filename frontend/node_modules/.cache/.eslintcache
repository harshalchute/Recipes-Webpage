[{"C:\\Users\\Harshal Chute\\Music\\Desktop\\Be Zen\\frontend\\src\\index.js":"1","C:\\Users\\Harshal Chute\\Music\\Desktop\\Be Zen\\frontend\\src\\App.js":"2","C:\\Users\\Harshal Chute\\Music\\Desktop\\Be Zen\\frontend\\src\\containers\\login.js":"3","C:\\Users\\Harshal Chute\\Music\\Desktop\\Be Zen\\frontend\\src\\containers\\details.js":"4","C:\\Users\\Harshal Chute\\Music\\Desktop\\Be Zen\\frontend\\src\\containers\\food_recipes.js":"5","C:\\Users\\Harshal Chute\\Music\\Desktop\\Be Zen\\frontend\\src\\containers\\signup.js":"6","C:\\Users\\Harshal Chute\\Music\\Desktop\\Be Zen\\frontend\\src\\services\\index.js":"7","C:\\Users\\Harshal Chute\\Music\\Desktop\\Be Zen\\frontend\\src\\services\\auth.services.js":"8","C:\\Users\\Harshal Chute\\Music\\Desktop\\Be Zen\\frontend\\src\\services\\recipes.services.js":"9","C:\\Users\\Harshal Chute\\Music\\Desktop\\Be Zen\\frontend\\src\\containers\\add_recipe.js":"10","C:\\Users\\Harshal Chute\\Music\\Desktop\\Recipes-Webpage\\frontend\\src\\index.js":"11","C:\\Users\\Harshal Chute\\Music\\Desktop\\Recipes-Webpage\\frontend\\src\\App.js":"12","C:\\Users\\Harshal Chute\\Music\\Desktop\\Recipes-Webpage\\frontend\\src\\containers\\add_recipe.js":"13","C:\\Users\\Harshal Chute\\Music\\Desktop\\Recipes-Webpage\\frontend\\src\\containers\\details.js":"14","C:\\Users\\Harshal Chute\\Music\\Desktop\\Recipes-Webpage\\frontend\\src\\containers\\login.js":"15","C:\\Users\\Harshal Chute\\Music\\Desktop\\Recipes-Webpage\\frontend\\src\\containers\\food_recipes.js":"16","C:\\Users\\Harshal Chute\\Music\\Desktop\\Recipes-Webpage\\frontend\\src\\containers\\signup.js":"17","C:\\Users\\Harshal Chute\\Music\\Desktop\\Recipes-Webpage\\frontend\\src\\services\\index.js":"18","C:\\Users\\Harshal Chute\\Music\\Desktop\\Recipes-Webpage\\frontend\\src\\services\\recipes.services.js":"19","C:\\Users\\Harshal Chute\\Music\\Desktop\\Recipes-Webpage\\frontend\\src\\services\\auth.services.js":"20"},{"size":467,"mtime":1672815742438,"results":"21","hashOfConfig":"22"},{"size":885,"mtime":1673088907686,"results":"23","hashOfConfig":"22"},{"size":2532,"mtime":1673097945275,"results":"24","hashOfConfig":"22"},{"size":2656,"mtime":1673097949473,"results":"25","hashOfConfig":"22"},{"size":3268,"mtime":1673097935809,"results":"26","hashOfConfig":"22"},{"size":4588,"mtime":1672992915060,"results":"27","hashOfConfig":"22"},{"size":69,"mtime":1672995891006,"results":"28","hashOfConfig":"22"},{"size":1336,"mtime":1673072983370,"results":"29","hashOfConfig":"22"},{"size":934,"mtime":1673015448272,"results":"30","hashOfConfig":"22"},{"size":10795,"mtime":1673097810234,"results":"31","hashOfConfig":"22"},{"size":467,"mtime":1672815742438,"results":"32","hashOfConfig":"33"},{"size":885,"mtime":1673088907686,"results":"34","hashOfConfig":"33"},{"size":10795,"mtime":1673097810234,"results":"35","hashOfConfig":"33"},{"size":2656,"mtime":1673097949473,"results":"36","hashOfConfig":"33"},{"size":2532,"mtime":1673097945275,"results":"37","hashOfConfig":"33"},{"size":3268,"mtime":1673097935809,"results":"38","hashOfConfig":"33"},{"size":4588,"mtime":1672992915060,"results":"39","hashOfConfig":"33"},{"size":69,"mtime":1672995891006,"results":"40","hashOfConfig":"33"},{"size":1047,"mtime":1673264614895,"results":"41","hashOfConfig":"33"},{"size":1452,"mtime":1673264603810,"results":"42","hashOfConfig":"33"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"1eaclh2",{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1r0sgce",{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"85"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95"},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99"},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Harshal Chute\\Music\\Desktop\\Be Zen\\frontend\\src\\index.js",[],[],[],"C:\\Users\\Harshal Chute\\Music\\Desktop\\Be Zen\\frontend\\src\\App.js",["109"],[],"C:\\Users\\Harshal Chute\\Music\\Desktop\\Be Zen\\frontend\\src\\containers\\login.js",[],[],"C:\\Users\\Harshal Chute\\Music\\Desktop\\Be Zen\\frontend\\src\\containers\\details.js",["110"],[],"import React, { useEffect, useState } from 'react';\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Button from 'react-bootstrap/Button';\r\nimport { recipeService } from \"../services\";\r\n\r\nconst Details = () => {\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const params = useParams();\r\n  const [recipe, setRecipe] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // console.log(match.params.recipeId)\r\n    // console.log(params)\r\n    recipeService(params.recipeId)\r\n      .then(res => {\r\n        console.log(res._details)\r\n        setRecipe(res._details)\r\n      })\r\n  }, [])\r\n\r\n  return (<div className='content' style={{ backgroundColor: 'lavender' }} >\r\n    <div className='content' style={{ overflow: 'auto' }} >\r\n      <div className='row m-0 p-0 d-flex justify-content-center'>\r\n        <div className='col-9' style={{\r\n          padding: '24px',\r\n          borderRadius: '8px',\r\n          backgroundColor: '#f0ffff78'\r\n        }}>\r\n          {recipe && <div>\r\n            <div className=\"card mb-3\" style={{ border: 'none' }}>\r\n              <img className=\"card-img-top\" style={{ height: \"420px\" }} src={recipe.imageURL} alt={recipe.name} />\r\n              <div className=\"card-body\">\r\n                <h4>RECIPE NAME :</h4>\r\n                <p className=\"card-title\">{recipe.name}</p>\r\n                <h4>CATEGORY :</h4>\r\n                <p className=\"card-text\">{recipe.category}</p>\r\n                <h4>INGREDIENTS :</h4>\r\n                <p className=\"card-text\">{recipe.ingredients && Object.keys(recipe.ingredients).map(item => <div>\r\n                  <h6 className='mt-3 mb-0'>Ingredients {+item + 1}:</h6>\r\n                  <div>Name: {recipe.ingredients[item].name}</div>\r\n                  <div>Type: {recipe.ingredients[item].type}</div>\r\n                  <div>Quantity: {recipe.ingredients[item].quantity}</div>\r\n                </div>)}</p>\r\n                <h4>STEPS :</h4>\r\n                <p className=\"card-text\">{recipe.steps && Object.keys(recipe.steps).map(item => <div>\r\n                  <h6 className='mt-3 mb-0'>Step {++item}:</h6>\r\n                  <div>{recipe.steps[item]}</div>\r\n                </div>)}</p>\r\n                <a href={recipe.description} className=\"btn btn-primary\">Checkout</a>\r\n                &nbsp;&nbsp;\r\n                <Button variant=\"primary\" type=\"button\" onClick={() => {\r\n                  navigate('/food-recipes');\r\n                }}>\r\n                  Back\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </div>}\r\n\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n  </div>)\r\n\r\n}\r\n\r\nexport default Details;","C:\\Users\\Harshal Chute\\Music\\Desktop\\Be Zen\\frontend\\src\\containers\\food_recipes.js",["111","112"],[],"C:\\Users\\Harshal Chute\\Music\\Desktop\\Be Zen\\frontend\\src\\containers\\signup.js",["113","114","115","116","117","118"],[],"C:\\Users\\Harshal Chute\\Music\\Desktop\\Be Zen\\frontend\\src\\services\\index.js",[],[],"C:\\Users\\Harshal Chute\\Music\\Desktop\\Be Zen\\frontend\\src\\services\\auth.services.js",[],[],"C:\\Users\\Harshal Chute\\Music\\Desktop\\Be Zen\\frontend\\src\\services\\recipes.services.js",[],[],"C:\\Users\\Harshal Chute\\Music\\Desktop\\Be Zen\\frontend\\src\\containers\\add_recipe.js",["119","120","121"],[],"C:\\Users\\Harshal Chute\\Music\\Desktop\\Recipes-Webpage\\frontend\\src\\index.js",[],[],"C:\\Users\\Harshal Chute\\Music\\Desktop\\Recipes-Webpage\\frontend\\src\\App.js",["122"],[],"import { React, useEffect } from 'react';\nimport { Routes, Route, BrowserRouter } from 'react-router-dom';\nimport './App.css';\nimport Login from \"./containers/login\";\nimport FoodRecipes from './containers/food_recipes';\nimport AddRecipe from './containers/add_recipe';\nimport Details from \"./containers/details\";\nimport Register from './containers/signup';\n\nimport { testConnection } from \"./services\";\n\nconst App = () => {\n\n  useEffect(() => {\n    // testConnection();\n  }, [])\n\n  return (\n    <BrowserRouter>\n      <Routes>\n        <Route path='/' element={<Login />} />\n        <Route path='/signup' element={<Register />} />\n        <Route path='/food-recipes' element={<FoodRecipes />} />\n        <Route path='/add-recipe' element={<AddRecipe />} />\n        <Route path='/details/:recipeId' element={<Details />} />\n      </Routes>\n    </BrowserRouter>\n  )\n}\n\nexport default App;\n","C:\\Users\\Harshal Chute\\Music\\Desktop\\Recipes-Webpage\\frontend\\src\\containers\\add_recipe.js",["123","124","125"],[],"import React, { useEffect, useState } from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\n\r\n\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nimport { recipesService, addrecipeService } from \"../services\";\r\n\r\nconst AddRecipe = () => {\r\n\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n\r\n    }, [])\r\n\r\n    const [recipeForm, setRecipeForm] = useState({\r\n        name: '',\r\n        category: '',\r\n        description: '',\r\n        step: '',\r\n        ingredients: [{\r\n            quantity: '',\r\n            name: '',\r\n            type: ''\r\n        }],\r\n        imageURL: '',\r\n    });\r\n\r\n\r\n    const [steps, setSteps] = useState([]);\r\n\r\n\r\n    const handleInputChange = (event) => {\r\n        const { name, value } = event.target;\r\n        setRecipeForm((prevProps) => ({\r\n            ...prevProps,\r\n            [name]: value\r\n        }));\r\n    };\r\n\r\n    const _handleKeyDown = (event) => {\r\n        if (event.key === 'Enter') {\r\n            setSteps([...steps, recipeForm.step]);\r\n            setRecipeForm((prevProps) => ({\r\n                ...prevProps,\r\n                ['step']: ''\r\n            }));\r\n        }\r\n    }\r\n\r\n    const handleSubmitRecipe = (event) => {\r\n        event.preventDefault();\r\n        console.log(recipeForm);\r\n        if (recipeForm.name !== '' &&\r\n            recipeForm.category !== '' &&\r\n            recipeForm.description !== '' &&\r\n            recipeForm.imageURL !== '' &&\r\n            steps.length > 1\r\n        ) {\r\n            console.log(steps);\r\n            const recipeData = {\r\n                name: recipeForm.name,\r\n                category: recipeForm.category,\r\n                description: recipeForm.description,\r\n                steps: steps,\r\n                ingredients: recipeForm.ingredients,\r\n                imageURL: recipeForm.imageURL,\r\n            }\r\n            addrecipeService(recipeData).then(res => {\r\n                console.log(res)\r\n                navigate('/food-recipes')\r\n            })\r\n        }\r\n    };\r\n\r\n    const addInputIngredients = event => {\r\n        event.preventDefault();\r\n        setRecipeForm({\r\n            ...recipeForm,\r\n            ingredients: [\r\n                ...recipeForm.ingredients,\r\n                {\r\n                    quantity: '',\r\n                    name: '',\r\n                    type: ''\r\n                }\r\n            ]\r\n        })\r\n    }\r\n\r\n\r\n    const handleIngredientInputChange = (event) => {\r\n        const { id, name, value } = event.target;\r\n        let ingredients = [...recipeForm.ingredients];\r\n        ingredients[id][name] = value;\r\n        setRecipeForm((prevProps) => ({\r\n            ...prevProps,\r\n            ingredients\r\n        }));\r\n    };\r\n\r\n    const handleSubmit = () => {\r\n        console.log(recipeForm);\r\n    }\r\n\r\n    const removeIngredient = (index) => {\r\n        recipeForm.ingredients.splice(index, 1);\r\n        setRecipeForm((prevProps) => ({\r\n            ...prevProps\r\n        }));\r\n    }\r\n\r\n\r\n\r\n    return (<div className='content' >\r\n        <div className=\"block-back\">\r\n            <img className=\"img-back\" src=\"assets/images/2.jpg\" alt=\"log img\" />\r\n        </div>\r\n\r\n        <div className='content' style={{ overflow: 'auto', zIndex: '100', position: 'relative', background: '#fbfff078' }}>\r\n            <div className='my-4'>\r\n                <Button variant=\"primary\" type=\"button\" onClick={() => {\r\n                    navigate('/food-recipes');\r\n                }}>\r\n                    Back\r\n                </Button>\r\n                <h3 className='my-4 text-center'>Add New Recipe</h3>\r\n                <div className='row m-0 p-0 d-flex justify-content-center'>\r\n                    <div className='col-9' style={{\r\n                        padding: '24px',\r\n                        borderRadius: '8px',\r\n                        backgroundColor: '#f0ffff78'\r\n                    }}>\r\n                        <Form >\r\n                            <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                                <Form.Label>Recipe name</Form.Label>\r\n                                <Form.Control type=\"text\" placeholder=\"Enter recipe name\" name=\"name\"\r\n                                    value={recipeForm.name}\r\n                                    onChange={handleInputChange} />\r\n                            </Form.Group>\r\n                            <hr />\r\n                            <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                                <Form.Label>Category</Form.Label>\r\n                                <Form.Control type=\"text\" placeholder=\"Enter recipe category\" name=\"category\"\r\n                                    value={recipeForm.category}\r\n                                    onChange={handleInputChange} />\r\n                            </Form.Group>\r\n                            <hr />\r\n                            <div className='d-flex'>\r\n                                <Form.Label>Ingredients</Form.Label>\r\n                                &nbsp;&nbsp;\r\n                                <Button variant=\"primary\" className='btn-sm' type=\"button\" onClick={addInputIngredients}>\r\n                                    <i className=\"fa fa-plus\"></i>\r\n                                </Button>\r\n                            </div>\r\n\r\n                            {recipeForm.ingredients && recipeForm.ingredients.map((ingredient, index) => <div key={index}>\r\n\r\n                                <div className='row m-0 p-0'>\r\n                                    <div className='col-5 p-1'>\r\n                                        <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                                            <Form.Label>Name</Form.Label>\r\n                                            <input type=\"text\" className='form-control' id={index}\r\n                                                placeholder='Ingredient Name'\r\n                                                name='name'\r\n                                                value={ingredient.name}\r\n                                                onChange={handleIngredientInputChange}\r\n                                            />\r\n                                        </Form.Group>\r\n                                    </div>\r\n                                    <div className='col-4 p-1'>\r\n                                        <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                                            <Form.Label>Quantity</Form.Label>\r\n                                            <input type=\"text\" className='form-control' id={index}\r\n                                                placeholder='Quantity'\r\n                                                name='quantity'\r\n                                                value={ingredient.quantity}\r\n                                                onChange={handleIngredientInputChange}\r\n                                            />\r\n                                        </Form.Group>\r\n                                    </div>\r\n                                    <div className='col-2 p-1'>\r\n                                        <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                                            <Form.Label>Type</Form.Label>\r\n                                            <input type=\"text\" className='form-control' id={index}\r\n                                                placeholder='Type'\r\n                                                name='type'\r\n                                                value={ingredient.type}\r\n                                                onChange={handleIngredientInputChange}\r\n                                            />\r\n                                        </Form.Group>\r\n                                    </div>\r\n                                    <div className='col-1 p-1 d-flex align-items-center'>\r\n                                        {index && index > 0 ? <div>\r\n                                            <Button variant=\"primary\" className='btn-sm' type=\"button\" onClick={() => removeIngredient(index)}>\r\n                                                <i className=\"fa fa-trash\"></i>\r\n                                            </Button>\r\n                                        </div> : ''}\r\n                                    </div>\r\n                                </div>\r\n                            </div>)\r\n                            }\r\n                            <hr />\r\n                            <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                                <Form.Label>Steps</Form.Label>\r\n                                <Form.Control type=\"text\" placeholder=\"Enter recipe steps\" name=\"step\"\r\n                                    value={recipeForm.step}\r\n                                    onChange={handleInputChange}\r\n                                    onKeyDown={_handleKeyDown}\r\n                                />\r\n                                <Form.Text className=\"text-warning\">\r\n                                    Press Enter After Every Step !!\r\n                                </Form.Text>\r\n                            </Form.Group>\r\n\r\n                            <ul>\r\n                                {steps && steps.map((item, index) => <li key={index}>Step {index + 1}: {item}</li>)}\r\n                            </ul>\r\n                            <hr />\r\n                            <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                                <Form.Label>Description</Form.Label>\r\n                                <Form.Control type=\"text\" placeholder=\"Enter recipe description\" name=\"description\"\r\n                                    value={recipeForm.description}\r\n                                    onChange={handleInputChange} />\r\n                            </Form.Group>\r\n                            <hr />\r\n                            <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                                <Form.Label>Image URL</Form.Label>\r\n                                <Form.Control type=\"text\" placeholder=\"Enter recipe image url\" name=\"imageURL\"\r\n                                    value={recipeForm.imageURL}\r\n                                    onChange={handleInputChange} />\r\n                            </Form.Group>\r\n                            <hr />\r\n                            <Button variant=\"primary\" type=\"button\" onClick={handleSubmitRecipe}>\r\n                                Submit\r\n                            </Button>\r\n                        </Form>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    </div>)\r\n}\r\n\r\nexport default AddRecipe;\r\n","C:\\Users\\Harshal Chute\\Music\\Desktop\\Recipes-Webpage\\frontend\\src\\containers\\details.js",["126"],[],"C:\\Users\\Harshal Chute\\Music\\Desktop\\Recipes-Webpage\\frontend\\src\\containers\\login.js",[],[],"C:\\Users\\Harshal Chute\\Music\\Desktop\\Recipes-Webpage\\frontend\\src\\containers\\food_recipes.js",["127","128"],[],"import React, { useEffect, useState } from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Modal from 'react-bootstrap/Modal';\r\n\r\n\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\n\r\nimport { recipesService, addrecipeService } from \"../services\";\r\n\r\nconst FoodRecipes = () => {\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const [recipe, setRecipe] = useState('');\r\n  const [recipes, setRecipes] = useState([]);\r\n  const [tempData, setTempData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    recipesService().then(res => {\r\n      console.log(res._recipes)\r\n      setRecipes(res._recipes);\r\n      setTempData(res._recipes);\r\n    })\r\n  }, [])\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem(\"user\");\r\n    navigate('/');\r\n  };\r\n\r\n\r\n  const addRecipeRedirect = () => {\r\n    navigate('/add-recipe');\r\n  };\r\n\r\n\r\n  return (<div className='content' >\r\n    <div className=\"block-back\">\r\n      <img className=\"img-back\" src=\"assets/images/2.jpg\" alt=\"log img\" />\r\n    </div>\r\n\r\n    <div className='content' style={{ overflow: 'auto', zIndex: '100', position: 'relative', background: '#fbfff078' }}>\r\n      <div>\r\n        <h3 style={{ fontWeight: 'bold', textAlign: 'center' }}>SEARCH & ADD RECIPES HERE !!</h3>\r\n      </div>\r\n      <div className='p-1 mt-3 d-flex justify-content-between '>\r\n        <div>\r\n          <Button variant=\"primary\" onClick={addRecipeRedirect}>\r\n            Add Recipe\r\n          </Button>\r\n        </div>\r\n        <Form.Group className=\"mb-3\" style={{ width: \"350px\" }} >\r\n          <input className='form-control'\r\n            type=\"text\"\r\n            value={recipe}\r\n            onChange={(event) => {\r\n              setRecipe(event.target.value)\r\n              console.log(recipes.filter(item =>\r\n                item.name?.toLowerCase().indexOf(event.target.value?.toLowerCase()) > -1\r\n              ))\r\n              setTempData(recipes.filter(item =>\r\n                item.name?.toLowerCase()\r\n                  .indexOf(event.target.value?.toLowerCase()) > -1\r\n              ))\r\n            }}\r\n            placeholder=\"Enter Recipe\"\r\n          />\r\n        </Form.Group>\r\n        <div>\r\n          <Button variant=\"primary\" type=\"button\" onClick={logout} >\r\n            Logout\r\n          </Button>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <h4 style={{ marginLeft: '15px', fontWeight: 'bold' }}>RECIPES</h4>\r\n        <div className='row p-0 m-0'>\r\n\r\n          {\r\n            tempData &&\r\n            tempData.length > 0 &&\r\n            Object.keys(tempData).map(item =>\r\n              <div className='col-4 p-1 d-flex justify-content-center'>\r\n                <div className=\"card\" style={{ width: '18rem' }}>\r\n                  <img className=\"card-img-top\" style={{ height: '180px', objectFit: 'cover' }} src={tempData[item].imageURL} alt={tempData[item].name} />\r\n                  <div className=\"card-body\">\r\n                    <h5 className=\"card-title item-line\">{tempData[item].name}</h5>\r\n                    <Link to={`/details/${tempData[item]._id}`} >Checkout</Link>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )\r\n          }\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  )\r\n}\r\nexport default FoodRecipes;","C:\\Users\\Harshal Chute\\Music\\Desktop\\Recipes-Webpage\\frontend\\src\\containers\\signup.js",["129","130","131","132","133","134"],[],"import { useState } from \"react\";\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport '../css/register.css';\r\nimport Card from 'react-bootstrap/Card';\r\n\r\nimport { registerService } from \"../services\";\r\n\r\nconst Register = () => {\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const [name, setName] = useState('');\r\n    const [mobileNumber, setMobileNumber] = useState('');\r\n    const [emailAddress, setEmailAddress] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const [error, setError] = useState(false);\r\n    const [errorStatus, setErrorStatus] = useState('');\r\n    const [errorMessage, setErrorMessage] = useState(false);\r\n\r\n\r\n    const [success, setSuccess] = useState(false);\r\n    const [successMessage, setSuccessMessage] = useState('');\r\n\r\n\r\n    const submitRegister = (e) => {\r\n        e.preventDefault()\r\n        const data = { name, mobileNumber, email: emailAddress, password }\r\n        // console.log(data)\r\n        // console.log(registerService(data))\r\n        registerService(data).then(res => {\r\n            // console.log(res)\r\n            if (res.success) {\r\n                setTimeout(() => {\r\n                    navigate('/');\r\n                }, 2500);\r\n            }\r\n        })\r\n    }\r\n\r\n    return (<div>\r\n        <div className='register-form'>\r\n            <Card style={{ width: '100%' }}>\r\n                <Card.Body>\r\n                    <h3 className='mb-3 text-center'>REGISTER</h3>\r\n                    {error ? <p className='text-center text-danger'>{errorMessage}</p> : \"\"}\r\n                    {success ? <p className='mb-3 text-center text-success'>{successMessage}</p> : \"\"}\r\n\r\n                    <div>\r\n                        <Form onSubmit={submitRegister}>\r\n\r\n                            <Form.Group className=\"mb-3\" >\r\n                                <Form.Label>Name</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    value={name}\r\n                                    onChange={(event) => setName(event.target.value)}\r\n                                    placeholder=\"Enter Your Name\"\r\n                                />\r\n                                <Form.Text className=\"text-muted\">\r\n                                </Form.Text>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group className=\"mb-3\" >\r\n                                <Form.Label>Mobile Number</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"number\"\r\n                                    value={mobileNumber}\r\n                                    onChange={(event) => setMobileNumber(event.target.value)\r\n                                    }\r\n                                    placeholder=\"Enter Mobile Number\"\r\n                                />\r\n                                <Form.Text className=\"text-muted\">\r\n                                </Form.Text>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group className=\"mb-3\" >\r\n                                <Form.Label>Email address</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"email\"\r\n                                    value={emailAddress}\r\n                                    onChange={(event) => setEmailAddress(event.target.value)\r\n                                    }\r\n                                    placeholder=\"Enter email\"\r\n                                />\r\n                            </Form.Group>\r\n\r\n                            <Form.Group className=\"mb-3\" >\r\n                                <Form.Label>Password</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"password\"\r\n                                    value={password}\r\n                                    onChange={(event) => setPassword(event.target.value)\r\n                                    }\r\n                                    placeholder=\"Password\"\r\n                                />\r\n                            </Form.Group>\r\n\r\n                            <Button variant=\"primary\" type=\"button\" onClick={submitRegister}>\r\n                                Submit\r\n                            </Button>\r\n                        </Form>\r\n                    </div>\r\n\r\n                </Card.Body>\r\n            </Card>\r\n        </div>\r\n    </div>);\r\n}\r\n\r\nexport default Register;","C:\\Users\\Harshal Chute\\Music\\Desktop\\Recipes-Webpage\\frontend\\src\\services\\index.js",[],[],"C:\\Users\\Harshal Chute\\Music\\Desktop\\Recipes-Webpage\\frontend\\src\\services\\recipes.services.js",[],[],"C:\\Users\\Harshal Chute\\Music\\Desktop\\Recipes-Webpage\\frontend\\src\\services\\auth.services.js",[],[],{"ruleId":"135","severity":1,"message":"136","line":10,"column":10,"nodeType":"137","messageId":"138","endLine":10,"endColumn":24},{"ruleId":"139","severity":1,"message":"140","line":22,"column":6,"nodeType":"141","endLine":22,"endColumn":8,"suggestions":"142"},{"ruleId":"135","severity":1,"message":"143","line":4,"column":8,"nodeType":"137","messageId":"138","endLine":4,"endColumn":13},{"ruleId":"135","severity":1,"message":"144","line":9,"column":26,"nodeType":"137","messageId":"138","endLine":9,"endColumn":42},{"ruleId":"135","severity":1,"message":"145","line":19,"column":19,"nodeType":"137","messageId":"138","endLine":19,"endColumn":27},{"ruleId":"135","severity":1,"message":"146","line":20,"column":12,"nodeType":"137","messageId":"138","endLine":20,"endColumn":23},{"ruleId":"135","severity":1,"message":"147","line":20,"column":25,"nodeType":"137","messageId":"138","endLine":20,"endColumn":39},{"ruleId":"135","severity":1,"message":"148","line":21,"column":26,"nodeType":"137","messageId":"138","endLine":21,"endColumn":41},{"ruleId":"135","severity":1,"message":"149","line":24,"column":21,"nodeType":"137","messageId":"138","endLine":24,"endColumn":31},{"ruleId":"135","severity":1,"message":"150","line":25,"column":28,"nodeType":"137","messageId":"138","endLine":25,"endColumn":45},{"ruleId":"135","severity":1,"message":"151","line":8,"column":10,"nodeType":"137","messageId":"138","endLine":8,"endColumn":24},{"ruleId":"152","severity":1,"message":"153","line":48,"column":17,"nodeType":"154","messageId":"155","endLine":48,"endColumn":29,"fix":"156"},{"ruleId":"135","severity":1,"message":"157","line":104,"column":11,"nodeType":"137","messageId":"138","endLine":104,"endColumn":23},{"ruleId":"135","severity":1,"message":"136","line":10,"column":10,"nodeType":"137","messageId":"138","endLine":10,"endColumn":24},{"ruleId":"135","severity":1,"message":"151","line":8,"column":10,"nodeType":"137","messageId":"138","endLine":8,"endColumn":24},{"ruleId":"152","severity":1,"message":"153","line":48,"column":17,"nodeType":"154","messageId":"155","endLine":48,"endColumn":29,"fix":"158"},{"ruleId":"135","severity":1,"message":"157","line":104,"column":11,"nodeType":"137","messageId":"138","endLine":104,"endColumn":23},{"ruleId":"139","severity":1,"message":"140","line":22,"column":6,"nodeType":"141","endLine":22,"endColumn":8,"suggestions":"159"},{"ruleId":"135","severity":1,"message":"143","line":4,"column":8,"nodeType":"137","messageId":"138","endLine":4,"endColumn":13},{"ruleId":"135","severity":1,"message":"144","line":9,"column":26,"nodeType":"137","messageId":"138","endLine":9,"endColumn":42},{"ruleId":"135","severity":1,"message":"145","line":19,"column":19,"nodeType":"137","messageId":"138","endLine":19,"endColumn":27},{"ruleId":"135","severity":1,"message":"146","line":20,"column":12,"nodeType":"137","messageId":"138","endLine":20,"endColumn":23},{"ruleId":"135","severity":1,"message":"147","line":20,"column":25,"nodeType":"137","messageId":"138","endLine":20,"endColumn":39},{"ruleId":"135","severity":1,"message":"148","line":21,"column":26,"nodeType":"137","messageId":"138","endLine":21,"endColumn":41},{"ruleId":"135","severity":1,"message":"149","line":24,"column":21,"nodeType":"137","messageId":"138","endLine":24,"endColumn":31},{"ruleId":"135","severity":1,"message":"150","line":25,"column":28,"nodeType":"137","messageId":"138","endLine":25,"endColumn":45},"no-unused-vars","'testConnection' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'params.recipeId'. Either include it or remove the dependency array.","ArrayExpression",["160"],"'Modal' is defined but never used.","'addrecipeService' is defined but never used.","'setError' is assigned a value but never used.","'errorStatus' is assigned a value but never used.","'setErrorStatus' is assigned a value but never used.","'setErrorMessage' is assigned a value but never used.","'setSuccess' is assigned a value but never used.","'setSuccessMessage' is assigned a value but never used.","'recipesService' is defined but never used.","no-useless-computed-key","Unnecessarily computed property ['step'] found.","Property","unnecessarilyComputedProperty",{"range":"161","text":"162"},"'handleSubmit' is assigned a value but never used.",{"range":"163","text":"162"},["164"],{"desc":"165","fix":"166"},[1137,1145],"'step'",[1137,1145],{"desc":"165","fix":"167"},"Update the dependencies array to be: [params.recipeId]",{"range":"168","text":"169"},{"range":"170","text":"169"},[620,622],"[params.recipeId]",[620,622]]